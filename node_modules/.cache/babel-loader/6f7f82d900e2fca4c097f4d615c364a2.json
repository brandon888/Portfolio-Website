{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Documents/Projects/portfolio/src/MatterEngine.js\",\n    _s = $RefreshSig$();\n\nimport Matter, { Body, Runner } from 'matter-js';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatterEngine = () => {\n  _s();\n\n  const testObj = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    var Engine = Matter.Engine;\n    var Render = Matter.Render;\n    var World = Matter.Runner;\n    var Bodies = Matter.Bodies;\n    var Composite = Matter.Composite;\n    var engine = Engine.create();\n    var render = Render.create({\n      element: testObj.current,\n      engine: engine,\n      options: {\n        width: 2000,\n        height: 1000,\n        wireframes: false\n      }\n    }); // create two boxes and a ground\n\n    var boxA = Bodies.rectangle(400, 200, 80, 80);\n    var boxB = Bodies.rectangle(450, 50, 80, 80);\n    var ground = Bodies.rectangle(400, 610, 800, 200, {\n      isStatic: true\n    }); // add all of the bodies to the world\n\n    Composite.add(engine.world, [boxA, boxB, ground]); // run the renderer\n\n    Render.run(render); // create runner\n\n    var runner = Runner.create(); // run the engine\n\n    Runner.run(runner, engine);\n  }, []);\n\n  const handleDown = e => {\n    if (e.key === 'ArrowUp') {\n      console.log(\"up\");\n      Body.applyForce(boxA, {\n        x: boxA.position.x,\n        y: boxA.position.y\n      }, {\n        x: 2,\n        y: 2\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleDown,\n    tabIndex: -1,\n    ref: testObj,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MatterEngine, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MatterEngine;\nexport default MatterEngine;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatterEngine\");","map":{"version":3,"sources":["/home/brandon/Documents/Projects/portfolio/src/MatterEngine.js"],"names":["Matter","Body","Runner","React","useEffect","useState","MatterEngine","testObj","createRef","Engine","Render","World","Bodies","Composite","engine","create","render","element","current","options","width","height","wireframes","boxA","rectangle","boxB","ground","isStatic","add","world","run","runner","handleDown","e","key","console","log","applyForce","x","position","y"],"mappings":";;;AAAA,OAAOA,MAAP,IAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,WAArC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAMC,OAAO,gBAAGJ,KAAK,CAACK,SAAN,EAAhB;AAGAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,MAAM,GAAGT,MAAM,CAACS,MAApB;AACA,QAAIC,MAAM,GAAGV,MAAM,CAACU,MAApB;AACA,QAAIC,KAAK,GAAGX,MAAM,CAACE,MAAnB;AACA,QAAIU,MAAM,GAAGZ,MAAM,CAACY,MAApB;AACA,QAAIC,SAAS,GAAGb,MAAM,CAACa,SAAvB;AAEA,QAAIC,MAAM,GAAGL,MAAM,CAACM,MAAP,EAAb;AAEA,QAAIC,MAAM,GAAGN,MAAM,CAACK,MAAP,CAAc;AACvBE,MAAAA,OAAO,EAAEV,OAAO,CAACW,OADM;AAEvBJ,MAAAA,MAAM,EAAEA,MAFe;AAGvBK,MAAAA,OAAO,EAAE;AACLC,QAAAA,KAAK,EAAE,IADF;AAELC,QAAAA,MAAM,EAAE,IAFH;AAGLC,QAAAA,UAAU,EAAE;AAHP;AAHc,KAAd,CAAb,CATY,CAmBZ;;AACA,QAAIC,IAAI,GAAGX,MAAM,CAACY,SAAP,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,EAA3B,EAA+B,EAA/B,CAAX;AACA,QAAIC,IAAI,GAAGb,MAAM,CAACY,SAAP,CAAiB,GAAjB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAX;AACA,QAAIE,MAAM,GAAGd,MAAM,CAACY,SAAP,CAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAArC,CAAb,CAtBY,CAwBZ;;AACAd,IAAAA,SAAS,CAACe,GAAV,CAAcd,MAAM,CAACe,KAArB,EAA4B,CAACN,IAAD,EAAOE,IAAP,EAAaC,MAAb,CAA5B,EAzBY,CA2BZ;;AACAhB,IAAAA,MAAM,CAACoB,GAAP,CAAWd,MAAX,EA5BY,CA8BZ;;AACA,QAAIe,MAAM,GAAG7B,MAAM,CAACa,MAAP,EAAb,CA/BY,CAiCZ;;AACAb,IAAAA,MAAM,CAAC4B,GAAP,CAAWC,MAAX,EAAmBjB,MAAnB;AAEH,GApCQ,EAoCN,EApCM,CAAT;;AAsCA,QAAMkB,UAAU,GAAIC,CAAD,IAAO;AACtB,QAAIA,CAAC,CAACC,GAAF,KAAU,SAAd,EAAyB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAnC,MAAAA,IAAI,CAACoC,UAAL,CAAgBd,IAAhB,EAAsB;AAClBe,QAAAA,CAAC,EAAEf,IAAI,CAACgB,QAAL,CAAcD,CADC;AAElBE,QAAAA,CAAC,EAAEjB,IAAI,CAACgB,QAAL,CAAcC;AAFC,OAAtB,EAGG;AACCF,QAAAA,CAAC,EAAE,CADJ;AAECE,QAAAA,CAAC,EAAE;AAFJ,OAHH;AAOH;AACJ,GAXD;;AAaA,sBACI;AACI,IAAA,SAAS,EAAER,UADf;AAEI,IAAA,QAAQ,EAAE,CAAC,CAFf;AAGI,IAAA,GAAG,EAAEzB,OAHT;AAII,IAAA,KAAK,EAAE;AAAEa,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE;AAAzB;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAhED;;GAAMf,Y;;KAAAA,Y;AAkEN,eAAeA,YAAf","sourcesContent":["import Matter, { Body, Runner } from 'matter-js'\nimport React, { useEffect, useState } from 'react';\n\nconst MatterEngine = () => {\n    const testObj = React.createRef();\n    \n\n    useEffect(() => {\n        var Engine = Matter.Engine;\n        var Render = Matter.Render;\n        var World = Matter.Runner;\n        var Bodies = Matter.Bodies;\n        var Composite = Matter.Composite;\n\n        var engine = Engine.create();\n\n        var render = Render.create({\n            element: testObj.current,\n            engine: engine,\n            options: {\n                width: 2000,\n                height: 1000,\n                wireframes: false,\n            }\n        });\n\n        // create two boxes and a ground\n        var boxA = Bodies.rectangle(400, 200, 80, 80);\n        var boxB = Bodies.rectangle(450, 50, 80, 80);\n        var ground = Bodies.rectangle(400, 610, 800, 200, { isStatic: true });\n\n        // add all of the bodies to the world\n        Composite.add(engine.world, [boxA, boxB, ground]);\n\n        // run the renderer\n        Render.run(render);\n\n        // create runner\n        var runner = Runner.create();\n\n        // run the engine\n        Runner.run(runner, engine);\n    \n    }, []);\n\n    const handleDown = (e) => {\n        if (e.key === 'ArrowUp') {\n            console.log(\"up\");\n            Body.applyForce(boxA, {\n                x: boxA.position.x,\n                y: boxA.position.y,\n            }, {\n                x: 2,\n                y: 2,\n            });\n        }   \n    }\n\n    return (\n        <div\n            onKeyDown={handleDown}\n            tabIndex={-1}\n            ref={testObj}\n            style={{ width: '100%', height: '100%' }}\n        >\n        </div>\n    )\n}\n\nexport default MatterEngine;"]},"metadata":{},"sourceType":"module"}