{"ast":null,"code":"import { Composite, Bodies, Constraint } from 'matter-js';\n\nconst SecondFloor = screen => {\n  var floorTwoComposite = Composite.create();\n  var leftGround = Bodies.rectangle(0.25 * screen.w, 2 * screen.h, screen.w * 0.5, screen.h * 0.05, {\n    isStatic: true,\n    collisionFilter: {\n      group: -3\n    }\n  });\n  var rightGround = Bodies.rectangle(0.75 * screen.w, 2 * screen.h, screen.w * 0.5, screen.h * 0.05, {\n    isStatic: true,\n    collisionFilter: {\n      group: -3\n    }\n  });\n  var leftJoint = Bodies.rectangle(0, 2 * screen.h, 30, 30, {\n    isStatic: true\n  });\n  var rightJoint = Bodies.rectangle(screen.w, 2 * screen.h, 30, 30, {\n    isStatic: true\n  });\n  var leftConstraint = Constraint.create({\n    bodyA: leftJoint,\n    pointA: {\n      x: -15,\n      y: -15\n    },\n    bodyB: leftGround,\n    pointB: {\n      x: -screen.w * 0.25,\n      y: 0\n    },\n    stiffness: 0.1,\n    render: {\n      visible: false\n    }\n  });\n  var rightConstraint = Constraint.create({\n    bodyA: rightJoint,\n    pointA: {\n      x: 15,\n      y: 15\n    },\n    bodyB: rightGround,\n    pointB: {\n      x: screen.w * 0.25,\n      y: 0\n    },\n    stiffness: 0.1,\n    render: {\n      visible: false\n    }\n  });\n  Composite.add(floorTwoComposite, [leftGround, rightGround, leftConstraint, rightConstraint]);\n  return {\n    floorTwoComposite,\n    leftGround,\n    rightGround\n  };\n};\n\n_c = SecondFloor;\nexport default SecondFloor;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecondFloor\");","map":{"version":3,"sources":["/home/brandon/Documents/Projects/portfolio-website-react/src/Scenes/SecondFloor.js"],"names":["Composite","Bodies","Constraint","SecondFloor","screen","floorTwoComposite","create","leftGround","rectangle","w","h","isStatic","collisionFilter","group","rightGround","leftJoint","rightJoint","leftConstraint","bodyA","pointA","x","y","bodyB","pointB","stiffness","render","visible","rightConstraint","add"],"mappings":"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","sourcesContent":["import { Composite, Bodies, Constraint } from 'matter-js'\n\nconst SecondFloor = (screen) => {\n  var floorTwoComposite = Composite.create();\n\n  var leftGround = Bodies.rectangle(0.25 * screen.w, 2 * screen.h, screen.w * 0.5, screen.h * 0.05, {\n    isStatic: true,\n    collisionFilter: { group: -3 }\n  });\n\n  var rightGround = Bodies.rectangle(0.75 * screen.w, 2 * screen.h, screen.w * 0.5, screen.h * 0.05, {\n    isStatic: true,\n    collisionFilter: { group: -3 },\n  });\n\n  var leftJoint = Bodies.rectangle(0, 2 * screen.h, 30, 30, {\n    isStatic: true,\n  });\n\n  var rightJoint = Bodies.rectangle(screen.w, 2 * screen.h, 30, 30, {\n    isStatic: true,\n  });\n\n  var leftConstraint = Constraint.create({\n    bodyA: leftJoint,\n    pointA: { x: -15, y: -15 },\n    bodyB: leftGround,\n    pointB: { x: -screen.w * 0.25, y: 0 },\n    stiffness: 0.1,\n    render: { visible: false }\n  });\n\n  var rightConstraint = Constraint.create({\n    bodyA: rightJoint,\n    pointA: { x: 15, y: 15 },\n    bodyB: rightGround,\n    pointB: { x: screen.w * 0.25, y: 0 },\n    stiffness: 0.1,\n    render: { visible: false }\n  });\n\n  Composite.add(floorTwoComposite, [leftGround, rightGround, leftConstraint, rightConstraint]);\n\n  return { floorTwoComposite, leftGround, rightGround };\n}\n\nexport default SecondFloor;\n"]},"metadata":{},"sourceType":"module"}