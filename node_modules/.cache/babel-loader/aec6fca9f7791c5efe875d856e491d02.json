{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Documents/Projects/portfolio/src/MatterEngine.js\",\n    _s = $RefreshSig$();\n\nimport Matter, { Body, Runner } from 'matter-js';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatterEngine = () => {\n  _s();\n\n  const testObj = /*#__PURE__*/React.createRef();\n  let boxA;\n  useEffect(() => {\n    var Engine = Matter.Engine;\n    var Render = Matter.Render;\n    var World = Matter.Runner;\n    var Bodies = Matter.Bodies;\n    var Composite = Matter.Composite;\n    var engine = Engine.create();\n    var render = Render.create({\n      element: testObj.current,\n      engine: engine,\n      options: {\n        width: 2000,\n        height: 1000,\n        wireframes: false\n      }\n    });\n    var letterB = Bodies.rectangle(600, 200, 80, 100, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: './assets/letter-b.png',\n          xScale: 2,\n          yScale: 2\n        }\n      }\n    }); // create two boxes and a ground\n\n    boxA = Bodies.rectangle(400, 200, 80, 80);\n    var boxB = Bodies.rectangle(450, 50, 80, 80);\n    var ground = Bodies.rectangle(400, 610, 800, 200, {\n      isStatic: true\n    }); // add all of the bodies to the world\n\n    Composite.add(engine.world, [boxA, boxB, letterB, ground]); // run the renderer\n\n    Render.run(render); // create runner\n\n    var runner = Runner.create(); // run the engine\n\n    Runner.run(runner, engine);\n  }, []);\n\n  const handleDown = e => {\n    if (e.key === 'ArrowRight') {\n      Body.applyForce(boxA, {\n        x: boxA.position.x,\n        y: boxA.position.y\n      }, {\n        x: 0.1,\n        y: 0\n      });\n    } else if (e.key === 'ArrowLeft') {\n      Body.applyForce(boxA, {\n        x: boxA.position.x,\n        y: boxA.position.y\n      }, {\n        x: -0.1,\n        y: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleDown,\n    tabIndex: -1,\n    ref: testObj,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MatterEngine, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MatterEngine;\nexport default MatterEngine;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatterEngine\");","map":{"version":3,"sources":["/home/brandon/Documents/Projects/portfolio/src/MatterEngine.js"],"names":["Matter","Body","Runner","React","useEffect","useState","MatterEngine","testObj","createRef","boxA","Engine","Render","World","Bodies","Composite","engine","create","render","element","current","options","width","height","wireframes","letterB","rectangle","isStatic","sprite","texture","xScale","yScale","boxB","ground","add","world","run","runner","handleDown","e","key","applyForce","x","position","y"],"mappings":"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","sourcesContent":["import Matter, { Body, Runner } from 'matter-js'\nimport React, { useEffect, useState } from 'react';\n\nconst MatterEngine = () => {\n    const testObj = React.createRef();\n    let boxA;\n\n    useEffect(() => {\n        var Engine = Matter.Engine;\n        var Render = Matter.Render;\n        var World = Matter.Runner;\n        var Bodies = Matter.Bodies;\n        var Composite = Matter.Composite;\n\n        var engine = Engine.create();\n\n        var render = Render.create({\n            element: testObj.current,\n            engine: engine,\n            options: {\n                width: 2000,\n                height: 1000,\n                wireframes: false,\n            }\n        });\n\n        var letterB = Bodies.rectangle(600, 200, 80, 100, {\n            isStatic: true,\n            render: {\n                sprite: {\n                    texture: './assets/letter-b.png',\n                    xScale: 2,\n                    yScale: 2,\n                }\n            }\n        })\n\n        // create two boxes and a ground\n        boxA = Bodies.rectangle(400, 200, 80, 80);\n        var boxB = Bodies.rectangle(450, 50, 80, 80);\n        var ground = Bodies.rectangle(400, 610, 800, 200, { isStatic: true });\n\n        // add all of the bodies to the world\n        Composite.add(engine.world, [boxA, boxB, letterB, ground]);\n\n        // run the renderer\n        Render.run(render);\n\n        // create runner\n        var runner = Runner.create();\n\n        // run the engine\n        Runner.run(runner, engine);\n    \n    }, []);\n\n    const handleDown = (e) => {\n        if (e.key === 'ArrowRight') {\n            Body.applyForce(boxA, {\n                x: boxA.position.x,\n                y: boxA.position.y,\n            }, {\n                x: 0.1,\n                y: 0,\n            });\n        } else if (e.key === 'ArrowLeft') {\n            Body.applyForce(boxA, {\n                x: boxA.position.x,\n                y: boxA.position.y,\n            }, {\n                x: -0.1,\n                y: 0,\n            });\n        }\n    }\n\n    return (\n        <div\n            onKeyDown={handleDown}\n            tabIndex={-1}\n            ref={testObj}\n            style={{ width: '100%', height: '100%' }}\n        >\n        </div>\n    )\n}\n\nexport default MatterEngine;"]},"metadata":{},"sourceType":"module"}