{"ast":null,"code":"var _jsxFileName = \"/home/brandon/Documents/Projects/portfolio/src/MatterWorld.js\",\n    _s = $RefreshSig$();\n\nimport Matter, { Body, Runner } from 'matter-js';\nimport React, { useEffect, useState } from 'react';\nimport Letters from './Letters';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatterWorld = () => {\n  _s();\n\n  const testObj = /*#__PURE__*/React.createRef();\n  let boxA;\n  useEffect(() => {\n    var Engine = Matter.Engine;\n    var Render = Matter.Render;\n    var World = Matter.Runner;\n    var Bodies = Matter.Bodies;\n    var Composite = Matter.Composite;\n    var engine = Engine.create();\n    var render = Render.create({\n      element: testObj.current,\n      engine: engine,\n      options: {\n        width: 2000,\n        height: 1000,\n        wireframes: false,\n        background: '#fffff'\n      }\n    });\n    boxA = Bodies.rectangle(400, 200, 80, 80, {\n      render: {\n        fillStyle: 'black'\n      }\n    }); // Letter B\n\n    var bLetter = Letters().bLetter;\n    Body.scale(bLetter, 1, 1); // Letter R\n\n    var ground = Bodies.rectangle(400, 614, 2000, 200, {\n      isStatic: true\n    });\n    Composite.add(engine.world, [boxA, bLetter, ground]);\n    Render.run(render);\n    var runner = Runner.create(); // run the engine\n\n    Runner.run(runner, engine);\n  }, []);\n\n  const handleDown = e => {\n    if (e.key === 'ArrowRight') {\n      Body.applyForce(boxA, {\n        x: boxA.position.x,\n        y: boxA.position.y\n      }, {\n        x: 0.1,\n        y: 0\n      });\n    } else if (e.key === 'ArrowLeft') {\n      Body.applyForce(boxA, {\n        x: boxA.position.x,\n        y: boxA.position.y\n      }, {\n        x: -0.1,\n        y: 0\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onKeyDown: handleDown,\n    tabIndex: -1,\n    ref: testObj,\n    style: {\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MatterWorld, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MatterWorld;\nexport default MatterWorld;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatterWorld\");","map":{"version":3,"sources":["/home/brandon/Documents/Projects/portfolio/src/MatterWorld.js"],"names":["Matter","Body","Runner","React","useEffect","useState","Letters","MatterWorld","testObj","createRef","boxA","Engine","Render","World","Bodies","Composite","engine","create","render","element","current","options","width","height","wireframes","background","rectangle","fillStyle","bLetter","scale","ground","isStatic","add","world","run","runner","handleDown","e","key","applyForce","x","position","y"],"mappings":"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","sourcesContent":["import Matter, { Body, Runner } from 'matter-js'\nimport React, { useEffect, useState } from 'react';\nimport Letters from './Letters';\n\nconst MatterWorld = () => {\n    const testObj = React.createRef();\n    let boxA;\n\n    useEffect(() => {\n        var Engine = Matter.Engine;\n        var Render = Matter.Render;\n        var World = Matter.Runner;\n        var Bodies = Matter.Bodies;\n        var Composite = Matter.Composite;\n\n        var engine = Engine.create();\n\n        var render = Render.create({\n            element: testObj.current,\n            engine: engine,\n            options: {\n                width: 2000,\n                height: 1000,\n                wireframes: false,\n                background: '#fffff',\n            }\n        });\n\n        boxA = Bodies.rectangle(400, 200, 80, 80, {\n            render: {\n                fillStyle: 'black',\n            }\n        });\n\n\n        // Letter B\n        var bLetter = Letters().bLetter;\n        Body.scale(bLetter, 1, 1);\n\n        // Letter R\n\n\n        var ground = Bodies.rectangle(400, 614, 2000, 200,{\n            isStatic: true,\n        });\n\n        Composite.add(engine.world, [boxA, bLetter, ground]);\n\n        Render.run(render);\n\n        var runner = Runner.create();\n\n        // run the engine\n        Runner.run(runner, engine);\n    \n    }, []);\n\n    const handleDown = (e) => {\n        if (e.key === 'ArrowRight') {\n            Body.applyForce(boxA, {\n                x: boxA.position.x,\n                y: boxA.position.y,\n            }, {\n                x: 0.1,\n                y: 0,\n            });\n        } else if (e.key === 'ArrowLeft') {\n            Body.applyForce(boxA, {\n                x: boxA.position.x,\n                y: boxA.position.y,\n            }, {\n                x: -0.1,\n                y: 0,\n            });\n        }\n    }\n\n    return (\n        <div\n            onKeyDown={handleDown}\n            tabIndex={-1}\n            ref={testObj}\n            style={{ width: '100%', height: '100%' }}\n        >\n        </div>\n    )\n}\n\nexport default MatterWorld;"]},"metadata":{},"sourceType":"module"}