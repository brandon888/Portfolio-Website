{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n};\n\nconst useWindowDimensions = () => {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions());\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n};\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nexport default useWindowDimensions;","map":{"version":3,"sources":["/home/brandon/Documents/Projects/portfolio-website-react/src/useWindowDimensions.js"],"names":["useState","useEffect","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAC9B,QAAM;AACFC,IAAAA,UAAU,EAAEC,KADV;AAEFC,IAAAA,WAAW,EAAEC;AAFX,MAGFC,MAHJ;AAKA,SAAQ;AACJH,IAAAA,KADI;AAEJE,IAAAA;AAFI,GAAR;AAIH,CAVD;;AAYA,MAAME,mBAAmB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACE,mBAAmB,EAApB,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,YAAY,GAAG,MAAM;AACvBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACH,KAFD;;AAIAK,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACH,CAbD;;GAAMD,mB;;AAeN,eAAeA,mBAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst getWindowDimensions = () => {\n    const {\n        innerWidth: width,\n        innerHeight: height,\n    } = window;\n\n    return ({\n        width,\n        height\n    });\n}\n\nconst useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, [])\n    \n    return windowDimensions;\n}\n\nexport default useWindowDimensions;"]},"metadata":{},"sourceType":"module"}