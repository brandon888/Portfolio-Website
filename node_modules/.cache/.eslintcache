[{"/home/brandon/Documents/Projects/portfolio/src/index.js":"1","/home/brandon/Documents/Projects/portfolio/src/App.js":"2","/home/brandon/Documents/Projects/portfolio/src/reportWebVitals.js":"3","/home/brandon/Documents/Projects/portfolio/src/MatterWorld.js":"4","/home/brandon/Documents/Projects/portfolio/src/Letters.js":"5"},{"size":500,"mtime":1641074836363,"results":"6","hashOfConfig":"7"},{"size":208,"mtime":1641154147433,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1641074836363,"results":"9","hashOfConfig":"7"},{"size":2052,"mtime":1641154618038,"results":"10","hashOfConfig":"7"},{"size":1133,"mtime":1641154463081,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16f5owr",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/brandon/Documents/Projects/portfolio/src/index.js",[],["23","24"],"/home/brandon/Documents/Projects/portfolio/src/App.js",["25"],"/home/brandon/Documents/Projects/portfolio/src/reportWebVitals.js",[],"/home/brandon/Documents/Projects/portfolio/src/MatterWorld.js",["26","27","28"],"/home/brandon/Documents/Projects/portfolio/src/Letters.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":12},{"ruleId":"34","severity":1,"message":"38","line":2,"column":28,"nodeType":"36","messageId":"37","endLine":2,"endColumn":36},{"ruleId":"34","severity":1,"message":"39","line":12,"column":13,"nodeType":"36","messageId":"37","endLine":12,"endColumn":18},{"ruleId":"40","severity":1,"message":"41","line":29,"column":16,"nodeType":"42","endLine":33,"endColumn":11},{"ruleId":"34","severity":1,"message":"43","line":1,"column":18,"nodeType":"36","messageId":"37","endLine":1,"endColumn":22},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'World' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'boxA' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Body' is defined but never used.","no-global-assign","no-unsafe-negation"]